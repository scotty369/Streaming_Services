```{python}
import pandas as pd
import plotly.express as px
import polars as pl

disney = pl.read_csv("/Users/scotttow123/Documents/Streaming_Services/Data/disney_plus_titles.csv")
hulu = pl.read_csv("/Users/scotttow123/Documents/Streaming_Services/Data/hulu_titles.csv")
netflix = pl.read_csv("/Users/scotttow123/Documents/Streaming_Services/Data/netflix_titles.csv")
prime = pd.read_csv("/Users/scotttow123/Documents/Streaming_Services/Data/amazon_prime_titles.csv")

disney = disney.with_columns(pl.lit("Disney+").alias("platform"))
hulu = hulu.with_columns(pl.lit("Hulu").alias("platform"))
netflix = netflix.with_columns(pl.lit("Netflix").alias("platform"))

disney = disney.to_pandas()
hulu = hulu.to_pandas()
netflix = netflix.to_pandas()

prime["platform"] = "Amazon Prime"

data = pd.concat([disney, hulu, netflix, prime], ignore_index=True)

fig_hist = px.histogram(data, x="release_year", color="platform", marginal="box", 
                        title="Distribution of Content Release Years by Platform",
                        opacity=0.7, nbins=30)
fig_hist.show()
```

```{python}
platform_counts = data['platform'].value_counts()

fig_bar = px.bar(platform_counts, x=platform_counts.index, y=platform_counts.values,
                 labels={'x': 'Platform', 'y': 'Number of Titles'},
                 title="Total Number of Titles by Platform")
fig_bar.show()
```

```{python}
content_type_counts = data.groupby(['platform', 'type']).size().unstack().fillna(0)

fig_type = content_type_counts.plot(kind='bar', stacked=True, figsize=(10, 6),
                                    title="Proportion of Movies and TV Shows by Platform")
plt.xlabel('Platform')
plt.ylabel('Count of Titles')
plt.show()
```

```{python}
release_year_trends = data.groupby(['platform', 'release_year']).size().unstack().fillna(0)

fig_line = px.line(release_year_trends, title="Release Year Trends by Platform", 
                   labels={'release_year': 'Year', 'value': 'Number of Titles'})
fig_line.show()
```

```{python}
top_titles = data.sort_values('release_year', ascending=False).groupby('platform').head(10)

fig_recent = px.bar(top_titles, x='title', y='release_year', color='platform',
                    title="Top 10 Most Recent Titles per Platform", 
                    labels={'title': 'Title', 'release_year': 'Release Year'})
fig_recent.show()
```

```{python}
fig_scatter = px.scatter(data, x="release_year", y="duration", color="platform",
                         title="Content Duration vs. Release Year by Platform",
                         labels={'release_year': 'Release Year', 'duration': 'Duration (minutes)'})
fig_scatter.show()
```

```{python}
fig_violin = px.violin(data, x="type", y="duration", color="platform", box=True, 
                       title="Content Duration Distribution by Type and Platform")
fig_violin.show()
```

```{python}
content_over_time = data.groupby(['release_year', 'platform']).size().reset_index(name='count')

fig_line = px.line(content_over_time, x='release_year', y='count', color='platform', 
                   title="Content Count Over Time by Platform")
fig_line.show()
```

```{python}
fig_box = px.box(data, x="platform", y="duration", points="all", title="Content Duration Distribution by Platform")
fig_box.show()
```

```{python}
content_stream = data.groupby(['release_year', 'type']).size().unstack().fillna(0)

fig_stream = px.area(content_stream, title="Movies and TV Shows Released Over Time")
fig_stream.show()
```

```{python}
import plotly.express as px

fig_scatter_matrix = px.scatter_matrix(data, dimensions=["release_year", "duration"], color="platform",
                                       title="Content Popularity Across Platforms")
fig_scatter_matrix.show()
```

```{python}
import pandas as pd
import plotly.express as px
import polars as pl
import plotly.figure_factory as ff

disney = pl.read_csv("/Users/scotttow123/Documents/Streaming_Services/Data/disney_plus_titles.csv")
hulu = pl.read_csv("/Users/scotttow123/Documents/Streaming_Services/Data/hulu_titles.csv")
netflix = pl.read_csv("/Users/scotttow123/Documents/Streaming_Services/Data/netflix_titles.csv")
prime = pd.read_csv("/Users/scotttow123/Documents/Streaming_Services/Data/amazon_prime_titles.csv")

disney = disney.with_columns(pl.lit("Disney+").alias("platform"))
hulu = hulu.with_columns(pl.lit("Hulu").alias("platform"))
netflix = netflix.with_columns(pl.lit("Netflix").alias("platform"))

disney = disney.to_pandas()
hulu = hulu.to_pandas()
netflix = netflix.to_pandas()

prime["platform"] = "Amazon Prime"

data = pd.concat([disney, hulu, netflix, prime], ignore_index=True)

fig_violin = px.violin(data, x="platform", y="duration", color="type", box=True, 
                       title="Content Duration Distribution by Platform and Type")
fig_violin.show()

fig_box_rating = px.box(data, x="platform", y="rating", color="platform",
                       title="Rating Distribution by Platform")
fig_box_rating.show()

fig_scatter_rating = px.scatter(data, x="release_year", y="duration", color="rating",
                                title="Release Year vs. Duration, Colored by Rating",
                                labels={'release_year': 'Release Year', 'duration': 'Duration (minutes)'})
fig_scatter_rating.show()
```

```{python}
import pandas as pd
import polars as pl
import seaborn as sns
import matplotlib.pyplot as plt

# --- Load Data ---
disney = pl.read_csv("/Users/scotttow123/Documents/Streaming_Services/Data/disney_plus_titles.csv")
hulu = pl.read_csv("/Users/scotttow123/Documents/Streaming_Services/Data/hulu_titles.csv")
netflix = pl.read_csv("/Users/scotttow123/Documents/Streaming_Services/Data/netflix_titles.csv")
prime = pd.read_csv("/Users/scotttow123/Documents/Streaming_Services/Data/amazon_prime_titles.csv")

disney = disney.with_columns(pl.lit("Disney+").alias("platform"))
hulu = hulu.with_columns(pl.lit("Hulu").alias("platform"))
netflix = netflix.with_columns(pl.lit("Netflix").alias("platform"))

disney = disney.to_pandas()
hulu = hulu.to_pandas()
netflix = netflix.to_pandas()

prime["platform"] = "Amazon Prime"

data = pd.concat([disney, hulu, netflix, prime], ignore_index=True)

def convert_duration(duration):
    if pd.isna(duration):
        return None
    duration = str(duration).lower()
    if "min" in duration:
        return int(duration.replace(" min", ""))
    elif "h" in duration:
        parts = duration.split(" ")
        hours = int(parts[0].replace("h", "")) * 60
        minutes = int(parts[1].replace("min", "")) if len(parts) > 1 else 0
        return hours + minutes
    return None

data["duration_minutes"] = data["duration"].apply(convert_duration)

data["date_added"] = pd.to_datetime(data["date_added"], errors="coerce")
data["year_added"] = data["date_added"].dt.year

plt.figure(figsize=(8, 6))
sns.violinplot(data=data, x="platform", y="duration_minutes", palette="Set2")
plt.title("Distribution of Movie/Show Durations by Streaming Service")
plt.xlabel("Streaming Service")
plt.ylabel("Duration (Minutes)")
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(18, 6))
df_yearly = data.groupby(["year_added", "platform"]).size().reset_index(name="count")
sns.lineplot(data=df_yearly, x="year_added", y="count", hue="platform", marker="o")
plt.title("Number of Titles Added Over Time")
plt.xlabel("Year")
plt.ylabel("Number of Titles")
plt.legend(title="Streaming Service")
plt.show()

plt.figure(figsize=(30, 6))
sns.histplot(data=data, x="rating", hue="platform", multiple="stack", palette="Set1", shrink=0.8)
plt.title("Distribution of Movie Ratings Across Platforms")
plt.xlabel("Rating")
plt.ylabel("Count of Titles")
plt.xticks(rotation=45)
plt.legend(title="Streaming Service")
plt.show()
```